import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.util.Scanner;

public class FolderLocker {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Enter the path of the folder you want to lock: ");
        String folderPath = scanner.nextLine();
        
        System.out.print("Enter a password to lock the folder: ");
        String password = scanner.nextLine();
        
        lockFolder(folderPath, password);
        
        scanner.close();
    }
    
    public static void lockFolder(String folderPath, String password) {
        try {
            File folder = new File(folderPath);
            
            if (!folder.exists()) {
                System.out.println("Folder does not exist.");
                return;
            }
            
            // Rename the folder to hide it
            File lockedFolder = new File(folder.getParent(), "." + folder.getName());
            folder.renameTo(lockedFolder);
            
            // Encrypt the folder using password
            encryptFolder(lockedFolder, password);
            
            System.out.println("Folder locked successfully.");
        } catch (Exception e) {
            System.out.println("An error occurred: " + e.getMessage());
        }
    }
    
    public static void encryptFolder(File folder, String password) throws IOException {
        for (File file : folder.listFiles()) {
            if (file.isDirectory()) {
                encryptFolder(file, password);
            } else {
                encryptFile(file, password);
            }
        }
    }
    
    public static void encryptFile(File file, String password) throws IOException {
        // You can use any encryption technique here, such as AES or DES
        // Implement the encryption logic to encrypt the file using the password
        // For simplicity, we'll just copy the file to a new location and delete the original file
        
        File encryptedFile = new File(file.getParent(), file.getName() + ".locked");
        Files.copy(file.toPath(), encryptedFile.toPath(), StandardCopyOption.REPLACE_EXISTING);
        file.delete();
    }
}
